<?php
 
namespace app\admin\controller;

 
use cmf\controller\AdminBaseController; 
use think\Db; 
 
class GoodsAuthController extends AdminBaseController
{
    
    public function _initialize()
    {
        
    }
     
    /**
     * 产品权限细分
     * @adminMenu(
     *     'name'   => '产品权限细分',
     *     'parent' => 'admin/Goods/default1',
     *     'display'=> false,
     *     'hasView'=> false,
     *     'order'  => 2,
     *     'icon'   => '',
     *     'remark' => '产品权限细分',
     *     'param'  => ''
     * )
     */
    public function index()
    { 
         
    }
    
    /**
     * 产品参数模板选择
     * @adminMenu(
     *     'name'   => '产品参数模板选择',
     *     'parent' => 'index',
     *     'display'=> false,
     *     'hasView'=> false,
     *     'order'  => 80,
     *     'icon'   => '',
     *     'remark' => '产品参数模板选择',
     *     'param'  => ''
     * )
     */
    public function template_set(){
        
    }
    /**
     * 产品参数设置
     * @adminMenu(
     *     'name'   => '产品参数设置',
     *     'parent' => 'index',
     *     'display'=> false,
     *     'hasView'=> false,
     *     'order'  => 81,
     *     'icon'   => '',
     *     'remark' => '产品参数设置',
     *     'param'  => ''
     * )
     */
    public function param_set(){
         
    }
    /**
     * 产品参数查看
     * @adminMenu(
     *     'name'   => '产品参数查看',
     *     'parent' => 'index',
     *     'display'=> false,
     *     'hasView'=> false,
     *     'order'  => 82,
     *     'icon'   => '',
     *     'remark' => '产品参数查看',
     *     'param'  => ''
     * )
     */
    public function param_get(){
        $this->success('ok');
    }
    
    /**
     * 产品价格模板确认
     * @adminMenu(
     *     'name'   => '产品价格模板确认',
     *     'parent' => 'index',
     *     'display'=> false,
     *     'hasView'=> false,
     *     'order'  =>90,
     *     'icon'   => '',
     *     'remark' => '产品价格模板确认',
     *     'param'  => ''
     * )
     */
    public function price_set(){
         
    }
   
     
    /**
     * 产品添加do
     * @adminMenu(
     *     'name'   => '产品添加do',
     *     'parent' => 'index',
     *     'display'=> false,
     *     'hasView'=> false,
     *     'order'  => 10,
     *     'icon'   => '',
     *     'remark' => '产品添加do',
     *     'param'  => ''
     * )
     */
    public function add_do()
    {
        
        $m=$this->m;
        $data=$this->request->param('');
       
        $time=time();
        $admin=$this->admin;
         //检查不合法参数
        $data_add=$this->param_check($data);
        if(!is_array($data_add)){
            $this->error($data_add);
        }
        //技术参数
        $value=$data_add['value'];
        unset($data_add['value']); 
         
        //创建人信息
        $data_add['aid']=$admin['id'];
        $data_add['status']=1;
        $data_add['atime']=$time;
        $data_add['time']=$time;
        //产品店铺,超管添加自营产品
        $data_add['shop']=($admin['shop']==1)?2:$admin['shop'];
       
        $m->startTrans();
        try {
            $id=$m->insertGetId($data_add);
        } catch (\Exception $e) {
            $m->rollback();
            $this->error($e->getMessage());
        }
        if($id<=0){
            $m->rollback();
            $this->error('添加失败，请刷新重试');
        }
       
        //最大编码更新
        $m_cate=db('cate');
        $max=$m_cate->where('id',$data_add['cid'])->value('max_num');
        if($data_add['code_num']>$max){
            $m_cate->where('id',$data_add['cid'])->update(['max_num'=>$data_add['code_num']]);
        }
        //技术参数记录
        if(!empty($value)){
            $params=[];
            foreach($value as $k=>$v){
                if(is_array($v)){
                    $v=implode(',', $v);
                }
                $params[]=[
                    'pid'=>$id,
                    'param_id'=>$k,
                    'value'=>$v,
                ];
            }
            db('goods_param')->insertAll($params);
        }
        //记录操作记录
        $flag=$this->flag;
        $table=$this->table;
        $data_action=[
            'aid'=>$admin['id'],
            'time'=>$time,
            'ip'=>get_client_ip(),
            'action'=>'添加'.$flag.$id.'-'.$data['name'],
            'table'=>$table,
            'type'=>'add',
            'pid'=>$id,
            'link'=>url('admin/'.$table.'/edit',['id'=>$id]),
            'shop'=>$admin['shop'],
        ];
        db('action')->insert($data_action);
        $m->commit();
        $this->success('添加成功',url('index'));
    }
     
    /**
     * 产品详情
     * @adminMenu(
     *     'name'   => '产品详情',
     *     'parent' => 'index',
     *     'display'=> false,
     *     'hasView'=> true,
     *     'order'  => 10,
     *     'icon'   => '',
     *     'remark' => '产品详情',
     *     'param'  => ''
     * )
     */
    public function edit()
    {
        
        $m=$this->m;
        $id=$this->request->param('id',0,'intval');
        $info=$m->where('id',$id)->find();
        if(empty($info)){
            $this->error('数据不存在');
        }
        //获取分类
        $this->cates();
        $this->assign('cid0',$info['cid0']);
        $this->assign('cid',$info['cid']);
        //品牌
        $this->brands();
        $this->assign('bchar',$info['bchar']);
        $this->assign('brand',$info['brand']);
        //权限检测
        $admin=$this->admin;
        $actions=$this->auth_get($admin['id']);
        $this->assign('actions',$actions);
        
        //价格模板
        if(isset($actions['auth']) || isset($actions['price_set'])){
            $this->prices();
        }else{
            $this->assign('prices',[]);
        }
        //参数
        $templates=null;
        $params1=null;
        $params0=null;
        if(isset($actions['auth']) || isset($actions['param_set']) || isset($actions['param_get'])){
            //能选择模板
            if(isset($actions['auth']) || isset($actions['param_set'])){
                $templates=db('template')->where('cid',$info['cid0'])->column('id,name');
            }
            //获取模板所有参数
            if($info['template']>0){  
                $where=[
                    'tp.t_id'=>$info['template'],
                    'p.status'=>2,
                ];
                $params0=db('template_param')
                ->alias('tp')
                ->join('cmf_param p','tp.p_id=p.id')
                ->where($where)
                ->order('p.sort asc')
                ->column('p.id,p.name,p.type,p.content,p.dsc');
                
                if(!empty($params0)){ 
                    //获取设置的参数
                    $params1=db('goods_param')
                    ->where('pid',$info['id'])
                    ->column('param_id,value');
                     
                    //处理技术参数,没有获取参数值的要设置默认
                    foreach($params0 as $k=>$v){
                        switch ($params0[$k]['type']){
                            case 3:
                                $params0[$k]['content']='';
                                //没有设置的参数值要给空值
                                if(!isset($params1[$k])){
                                    $params1[$k]='';
                                }
                                break;
                            case 1:
                                 //单选框
                                $params0[$k]['content']=explode(',',$params0[$k]['content']);
                                //没有设置的参数值要给空值
                                if(!isset($params1[$k])){
                                    $params1[$k]='';
                                }
                                break;
                            case 2:
                                //多选框
                                $params0[$k]['content']=explode(',',$params0[$k]['content']);
                                //没有设置的参数值要给空值
                                if(isset($params1[$k])){
                                    $params1[$k]=explode(',',$params1[$k]);
                                }else{
                                    $params1[$k]=[];
                                }
                                break;
                            default:
                                $this->error('参数类型不存在');
                                break;
                        }
                        
                    }
                   
                } 
            }
           
        } 
       
        $this->assign('info',$info);
        $this->assign('templates',$templates);
        $this->assign('params0',$params0);
        $this->assign('params1',$params1);
        
        return $this->fetch();
    }
    /**
     * 产品状态审核
     * @adminMenu(
     *     'name'   => '产品状态审核',
     *     'parent' => 'index',
     *     'display'=> false,
     *     'hasView'=> false,
     *     'order'  => 10,
     *     'icon'   => '',
     *     'remark' => '产品状态审核',
     *     'param'  => ''
     * )
     */
    public function review()
    {
        //复制adminpro的审核
        $status=$this->request->param('status',0,'intval');
        $id=$this->request->param('id',0,'intval');
        if($status<1 || $status>4 || $id<=0){
            $this->error('信息错误');
        }
        $m=$this->m;
        //查找信息
        $info=$m->where('id',$id)->find();
        if(empty($info)){
            $this->error('信息不存在');
        }
        $admin=$this->admin;
        //其他店铺的审核判断
        if($admin['shop']!=1){
            if(empty($info['shop']) || $info['shop']!=$admin['shop']){
                $this->error('不能审核其他店铺的信息');
            }
        }
        $time=time();
        $update=[
            'rid'=>$admin['id'],
            'rtime'=>$time,
            'status'=>$status,
            'time'=>$time,
        ];
        $row=$m->where('id',$id)->update($update);
        
        if($row!==1){
            $m->rollback();
            $this->error('审核失败，请刷新后重试');
        }
        //审核成功，记录操作记录,发送审核信息
        $flag=$this->flag;
        $statuss=$this->statuss;
        $table=$this->table;
        //记录操作记录
        $link=url('admin/'.$table.'/edit',['id'=>$info['id']]);
        $data_action=[
            'aid'=>$admin['id'],
            'time'=>$time,
            'ip'=>get_client_ip(),
            'action'=>'审核'.$flag.$info['id'].'-'.$info['name'].'的状态为'.$statuss[$status],
            'table'=>$table,
            'type'=>'review',
            'pid'=>$info['id'],
            'link'=>$link,
            'shop'=>$admin['shop'],
        ];
        //发送审核信息
        $data_msg=[
            'aid'=>1,
            'time'=>$time,
            'uid'=>$info['aid'],
            'dsc'=>'对'.$flag.$info['id'].'-'.$info['name'].'已审核，状态为'.$statuss[$status],
            'type'=>'review',
            'link'=>$link,
            'shop'=>$admin['shop'],
        ];
        db('action')->insert($data_action);
        db('msg')->insert($data_msg);
        $m->commit();
        $this->success('审核成功');
    }
    /**
     * 产品文件和图片
     * @adminMenu(
     *     'name'   => ' 产品文件和图片',
     *     'parent' => 'index',
     *     'display'=> false,
     *     'hasView'=> true,
     *     'order'  => 10,
     *     'icon'   => '',
     *     'remark' => ' 产品文件和图片',
     *     'param'  => ''
     * )
     */
    public function image()
    {
        
        $m=$this->m;
        $id=$this->request->param('id',0,'intval');
        $info=$m->where('id',$id)->find();
        if(empty($info)){
            $this->error('数据不存在');
        }
        //权限检测
        $admin=$this->admin;
        $actions=$this->auth_get($admin['id']);
        $this->assign('actions',$actions);
        //根据权限得到文件
        $where=[
            'pid'=>['eq',$id],
        ];
        //文件权限
        if(!isset($actions['auth'])){ 
            $file_type=$this->file_type;
            $file_type1=$file_type;
            //1极敏商城图不需要权限
            unset($file_type1[1]);
            $types=[1];
            foreach($file_type1 as $k=>$v){
                $tmp1=$v[0].'_set';
                $tmp2=$v[0].'_get';
                if(isset($actions[$tmp1]) || isset($actions[$tmp2])){
                    $types[]=$k;
                }else{
                    unset($file_type[$k]);
                }
            }
            //只显示有权限的
            $where['type']=['in',$types]; 
            $this->assign('file_type',$file_type);
        }
        
        $tmp=db('goods_file')->where($where)->column('id,name,file,type');
        $list=[];
        $path=getcwd().'/upload/';
        foreach($tmp as $k=>$v){
            //直接加判断，防止错误
            //if(in_array($v['type'],[1,2,3])){
            if(is_file($path.$v['file'].'.1.jpg')){
                $v['file1']=$v['file'].'1.jpg';
                $v['file2']=$v['file'].'2.jpg';
                $v['file3']=$v['file'].'3.jpg';
            }else{
                $v['file1']=$v['file'];
                $v['file2']=$v['file'];
                $v['file3']=$v['file'];
            }
           
            $list[$v['type']][$k]=$v;
        }
        $this->assign('info',$info);
        $this->assign('list',$list);
        
        return $this->fetch();
    }
    /**
     * 产品图片文件编辑提交
     * @adminMenu(
     *     'name'   => '产品图片文件编辑提交',
     *     'parent' => 'index',
     *     'display'=> false,
     *     'hasView'=> false,
     *     'order'  => 10,
     *     'icon'   => '',
     *     'remark' => '产品图片文件编辑提交',
     *     'param'  => ''
     * )
     */
    public function image_edit_do()
    {
        $m=$this->m;
        $table=$this->table;
        $flag=$this->flag;
        $data=$this->request->param();
        $id=intval($data['id']);
        $info=$m->where('id',$id)->find();
        if(empty($info)){
            $this->error('数据不存在');
        }
        
        $time=time();
        $admin=$this->admin;
        //其他店铺的审核判断
        if($admin['shop']!=1){
            if(empty($info['shop']) || $info['shop']!=$admin['shop']){
                $this->error('不能编辑其他店铺的信息');
            }
        }
        $update=[
            'pid'=>$info['id'],
            'aid'=>$admin['id'],
            'atime'=>$time,
            'table'=>'goods_file',
            'rstatus'=>1,
            'rid'=>0,
            'rtime'=>0,
            'shop'=>$admin['shop'],
        ];
        
        $content=[];
        
        //检查文件修改
        $tmp=db('goods_file')->where('pid',$id)->column('id,name,file,type');
        $list=[];
        $path=getcwd().'/upload/';
        $pathid='goods/'.$id.'/';
        if(!is_dir($path.$pathid)){
            mkdir($path.$pathid);
        }
        //权限检测 
        $actions=$this->auth_get($admin['id']);
        foreach($tmp as $k=>$v){ 
            $list[$v['type']][]=$v['name'].','.$v['file'];
            
        }
        $file_type=$this->file_type;
        //文件权限
        if(!isset($actions['auth'])){
            
            $file_type1=$file_type;
            //1极敏商城图不需要权限
            unset($file_type1[1]);
            //循环检测哪些可以设置
            foreach($file_type1 as $k=>$v){
                $tmp1=$v[0].'_set'; 
                //没权限就删除
                if(!isset($actions[$tmp1])){
                    unset($file_type[$k]);
                }
            } 
        }
       
        $files=[];
        //循环得到上传后的数据
        foreach($file_type as $k=>$v){
            $urls=($v[0]).'_urls';
            $names=($v[0]).'_names';
            //没文件的为空
            $files[$k]=[];
            if(!empty($data[$urls])){ 
                foreach($data[$urls] as $kk=>$vv){
                    //名称中不能有逗号
                    if(empty($data[$names][$kk])){
                        $data[$names][$kk]=$v[1].$kk;
                    }else{
                        //可以改为正则检测
                        if(strpos($data[$names][$kk], ',')!==false){
                            $this->error('文件名称中不能有逗号');
                        }
                    }
                    $files[$k][]=$data[$names][$kk].','.$data[$urls][$kk];
                } 
            }
            //没文件的为空
            if(!isset($list[$k])){
                $list[$k]=[];
            }
            //比较变化
            if(!empty(array_diff($files[$k],$list[$k])) ||  !empty(array_diff($list[$k],$files[$k]))){
                //有变化就保存图片，然后保存json
                foreach($files[$k] as $kk=>$vv){
                    //先拆分才能比较,先得到,的位置
                    $tmp_file=explode(',', $vv);
                    if (!is_file($path.$tmp_file[1]))
                    {
                        $this->error($tmp_file[0].'文件损坏，请注意');
                    }
                    //先比较是否需要额外保存,admin打头的要重新保存
                    if(strpos($tmp_file[1], 'admin/')===0){
                          //获取后缀名,复制文件
                        $ext=substr($tmp_file[1], strrpos($tmp_file[1],'.'));
                        $newfile=$pathid.($v[0]).$tmp_file[0].date('Ymd-His').$ext;
                        $result =copy($path.$tmp_file[1], $path.$newfile);
                        if ($result == false)
                        {
                            $this->error($tmp_file[0].'文件复制错误，请重试');
                        }else{
                            $files[$k][$kk]=$tmp_file[0].','.$newfile;
                        } 
                        
                    } 
                    
                }
                $content[$k]=json_encode($files[$k]);
                
            }
        }
        
        if(empty($content)){
            $this->error('未修改');
        }
        //保存更改
        $m_edit=db('edit');
        $m_edit->startTrans();
        $eid=$m_edit->insertGetId($update);
        if($eid>0){
            $data_content=[
                'eid'=>$eid,
                'content'=>json_encode($content),
            ];
            db('edit_info')->insert($data_content);
        }else{
            $m_edit->rollback();
            $this->error('保存数据错误，请重试');
        }
        //记录操作记录
        $link=url('admin/'.$table.'/image_edit_info',['id'=>$eid]);
        $data_action=[
            'aid'=>$admin['id'],
            'time'=>$time,
            'ip'=>get_client_ip(),
            'action'=>'编辑'.$flag.'图片/文件'.$info['id'].'-'.$info['name'],
            'table'=>$table,
            'type'=>'edit',
            'pid'=>$info['id'],
            'link'=>$link,
            'shop'=>$admin['shop'],
        ];
        db('action')->insert($data_action);
        $m_edit->commit();
        $this->success('已提交修改');
    }
    /**
     * 产品图片文件编辑详情
     * @adminMenu(
     *     'name'   => '产品图片文件编辑详情',
     *     'parent' => 'index',
     *     'display'=> false,
     *     'hasView'=> false,
     *     'order'  => 10,
     *     'icon'   => '',
     *     'remark' => '产品图片文件编辑详情',
     *     'param'  => ''
     * )
     */
    public function image_edit_info()
    {
        $m=$this->m;
        $eid=$this->request->param('id',0,'intval');
        $table=$this->table;
        //获取编辑信息
        $m_edit=db('edit');
        $info1=$m_edit->where('id',$eid)->find();
        if(empty($info1)){
            $this->error('编辑信息不存在');
        }
        $id=$info1['pid']; 
        $where_file=['pid'=>['eq',$id]];
        //权限检测
        $admin=$this->admin;
        $actions=$this->auth_get($admin['id']);
        $this->assign('actions',$actions);
        //文件权限
        if(!isset($actions['auth'])){
            $file_type=$this->file_type;
            $file_type1=$file_type;
            //1极敏商城图不需要权限
            unset($file_type1[1]);
            $types=[1];
            foreach($file_type as $k=>$v){
                $tmp1=$v[0].'_set';
                $tmp2=$v[0].'_get';
                if(isset($actions[$tmp1]) || isset($actions[$tmp2])){
                    $types[]=$k;
                }else{
                    unset($file_type[$k]);
                }
            }
            //只显示有权限的
            $where_file['type']=['in',$types];
            $this->assign('file_type',$file_type);
           
        }
         
        //获取改变的信息
        $change=db('edit_info')->where('eid',$eid)->value('content');
        $change=json_decode($change,true);
        $path=getcwd().'/upload/';
        foreach($change as $k=>$v){
            //没权限的不展示
            if(!isset($actions['auth']) && !in_array($k,$types)){
                continue;
            }
            $v=json_decode($v,true);
            foreach($v as $kk=>$vv){
                $tmp_file=explode(',', $vv);
                $tmp_file=[
                    'name'=>$tmp_file[0],
                    'file'=>$tmp_file[1],
                ];
                if(!is_file($path.$tmp_file['file'])){
                    $tmp_file['name'].='文件已损坏';
                }
                //直接加判断，防止错误
                if(is_file($path. $tmp_file['file'].'.1.jpg')){
                    $tmp_file['file1']= $tmp_file['file'].'1.jpg';
                    $tmp_file['file2']= $tmp_file['file'].'2.jpg';
                    $tmp_file['file3']= $tmp_file['file'].'3.jpg';
                }else{
                    $tmp_file['file1']= $tmp_file['file'];
                    $tmp_file['file2']= $tmp_file['file'];
                    $tmp_file['file3']= $tmp_file['file'];
                }
                $v[$kk]=$tmp_file;
            }
            $change[$k]=$v;
        }
      
       
        $info=$m->where('id',$id)->find();
        if(empty($info)){
            $this->error('数据不存在');
        }
        //
        $tmp=db('goods_file')->where($where_file)->column('id,name,file,type');
        $list=[];
       
        foreach($tmp as $k=>$v){
             
           //直接加判断，防止错误
            if(is_file($path.$v['file'].'.1.jpg')){
                $v['file1']=$v['file'].'1.jpg';
                $v['file2']=$v['file'].'2.jpg';
                $v['file3']=$v['file'].'3.jpg';
            }else{
                $v['file1']=$v['file'];
                $v['file2']=$v['file'];
                $v['file3']=$v['file'];
            }
            
            $list[$v['type']][$k]=$v;
            
        }
        $this->assign('info1',$info1);
        $this->assign('list',$list);
        $this->assign('change',$change);
       
        return $this->fetch();
        
    }
    /**
     * 产品文件编辑审核
     * @adminMenu(
     *     'name'   => '产品文件编辑审核',
     *     'parent' => 'index',
     *     'display'=> false,
     *     'hasView'=> false,
     *     'order'  => 10,
     *     'icon'   => '',
     *     'remark' => '产品文件编辑审核',
     *     'param'  => ''
     * )
     */
    public function image_edit_review()
    {
        //审核编辑的信息
        $status=$this->request->param('rstatus',0,'intval');
        $id=$this->request->param('id',0,'intval');
        if(($status!=2 && $status!=3) || $id<=0){
            $this->error('信息错误');
        }
        $m=$this->m;
        $table=$this->table;
        $m_edit=db('edit');
        $info=$m_edit
        ->field('e.*,p.name as pname,a.user_nickname as aname')
        ->alias('e')
        ->join('cmf_'.$table.' p','p.id=e.pid')
        ->join('cmf_user a','a.id=e.aid')
        ->where('e.id',$id)
        ->find();
        if(empty($info)){
            $this->error('无效信息');
        }
        if($info['rstatus']!=1){
            $this->error('编辑信息已被审核！不能重复审核');
        }
        
        $admin=$this->admin;
        //其他店铺的审核判断
        if($admin['shop']!=1){
            if(empty($info['shop']) || $info['shop']!=$admin['shop']){
                $this->error('不能审核其他店铺的信息');
            }
        }
        $time=time();
        
        $m->startTrans();
        
        $update=[
            'rid'=>$admin['id'],
            'rtime'=>$time,
            'rstatus'=>$status,
        ];
        //只有未审核的才能更新
        $where=[
            'id'=>$id,
            'rstatus'=>1,
        ];
        $row=$m_edit->where($where)->update($update);
        if($row!==1){
            $m->rollback();
            $this->error('审核失败，请刷新后重试');
        }
        //是否更新,2同意，3不同意
        if($status==2){
            //组装更新数据
            $update_info=[
                'time'=>$time,
            ];
            $file_type=$this->file_type;
            //得到修改的字段
            $change=db('edit_info')->where('eid',$id)->value('content');
            $change=json_decode($change,true);
            $where_delete=[
                'pid'=>['eq',$info['pid']],
            ];
            $data_add=[];
            $types=[];
            
            $path=getcwd().'/upload/';
            $pic_size=config('pic_size');
            foreach($change as $k=>$v){
                //有变动要删除
                $types[]=$k;
                //分析数据
                $v=json_decode($v,true);
                foreach($v as $kk=>$vv){
                    $tmp_file=explode(',', $vv);
                    $tmp_file=[
                        'name'=>$tmp_file[0],
                        'file'=>$tmp_file[1],
                    ];
                    if(!is_file($path.$tmp_file['file'])){
                        $this->error($tmp_file['name'].'文件已损坏，不能更新');
                    }
                    $data_add[]=[
                        'pid'=>$info['pid'],
                        'type'=>$k,
                        'name'=>$tmp_file['name'],
                        'file'=>$tmp_file['file'],
                    ];
                    //判断是否需要编制图片
                    if($k<4){
                        $tmp_file['file1']= $tmp_file['file'].'1.jpg';
                        $tmp_file['file2']= $tmp_file['file'].'2.jpg';
                        $tmp_file['file3']= $tmp_file['file'].'3.jpg';
                        if(!is_file($path. $tmp_file['file1']) || !is_file($path. $tmp_file['file2']) || !is_file($path. $tmp_file['file3'])){
                            zz_set_image($tmp_file['file'], $tmp_file['file1'], $pic_size[1][0], $pic_size[1][1]);
                            zz_set_image($tmp_file['file'], $tmp_file['file2'], $pic_size[2][0], $pic_size[2][1]);
                            zz_set_image($tmp_file['file'], $tmp_file['file3'], $pic_size[3][0], $pic_size[3][1]);
                        }
                    } 
                    
                }
               //统计图片文件数量 
                $update_info[$file_type[$k][0]]=count($v);
            }
              
            $row=$m->where('id',$info['pid'])->update($update_info);
            if($row!==1){
                $m->rollback();
                $this->error('信息更新失败，请刷新后重试');
            }
            $where_delete['type']=['in',$types];
            db('goods_file')->where($where_delete)->delete();
            if(!empty($data_add)){
                db('goods_file')->insertAll($data_add);
            } 
        }
        
        //审核成功，记录操作记录,发送审核信息
        $flag=$this->flag;
        $review_status=$this->review_status;
        //记录操作记录
        $link=url('admin/'.$table.'/image_edit_info',['id'=>$info['id']]);
        $data_action=[
            'aid'=>$admin['id'],
            'time'=>$time,
            'ip'=>get_client_ip(),
            'action'=>'审核'.$info['aid'].'-'.$info['aname'].'对'.$flag.$info['pid'].'-'.$info['pname'].'的文件编辑为'.$review_status[$status],
            'table'=>$table,
            'type'=>'edit_review',
            'pid'=>$info['pid'],
            'link'=>$link,
            'shop'=>$admin['shop'],
        ];
        //发送审核信息
        $data_msg=[
            'aid'=>1,
            'time'=>$time,
            'uid'=>$info['aid'],
            'dsc'=>'对'.$flag.$info['pid'].'-'.$info['pname'].'的文件编辑已审核，结果为'.$review_status[$status],
            'type'=>'edit_review',
            'link'=>$link,
            'shop'=>$admin['shop'],
        ];
        db('action')->insert($data_action);
        db('msg')->insert($data_msg);
        
        $m->commit();
        $this->success('审核成功');
    }
    /**
     * 产品技术资料详情
     * @adminMenu(
     *     'name'   => '产品技术资料详情',
     *     'parent' => 'index',
     *     'display'=> false,
     *     'hasView'=> true,
     *     'order'  => 10,
     *     'icon'   => '',
     *     'remark' => ' 产品技术资料详情',
     *     'param'  => ''
     * )
     */
    public function content()
    {
        
        $m=$this->m;
        $id=$this->request->param('id',0,'intval');
        $info=$m->where('id',$id)->find();
        if(empty($info)){
            $this->error('数据不存在');
        }
        session('file_path','/goods/'.$id.'/');
        $content=db('goods_tech')->where('pid',$id)->value('content');
       
        $this->assign('info',$info);
        $this->assign('content',$content);
        return $this->fetch();
    }
    /**
     * 产品技术资料编辑提交
     * @adminMenu(
     *     'name'   => '产品技术资料编辑提交',
     *     'parent' => 'index',
     *     'display'=> false,
     *     'hasView'=> false,
     *     'order'  => 10,
     *     'icon'   => '',
     *     'remark' => '产品技术资料编辑提交',
     *     'param'  => ''
     * )
     */
    public function content_edit_do()
    {
        $m=$this->m;
        $table=$this->table;
        $flag=$this->flag;
        $data=$this->request->param();
        $id=intval($data['id']);
        $info=$m->where('id',$id)->find();
        if(empty($info)){
            $this->error('数据不存在');
        }
        
        $time=time();
        $admin=$this->admin;
        //其他店铺的审核判断
        if($admin['shop']!=1){
            if(empty($info['shop']) || $info['shop']!=$admin['shop']){
                $this->error('不能编辑其他店铺的信息');
            }
        }
        $update=[
            'pid'=>$info['id'],
            'aid'=>$admin['id'],
            'atime'=>$time,
            'table'=>'goods_content',
            'rstatus'=>1,
            'rid'=>0,
            'rtime'=>0,
            'shop'=>$admin['shop'],
        ];
        
        $content=[];
        //检查文件修改
        $tmp=db('goods_tech')->where('pid',$id)->column('content');
        $content=trim($_POST['content']);
        if($tmp==$content){
            $this->error('未修改');
        }
        //保存更改
        $m_edit=db('edit');
        $m_edit->startTrans();
        $eid=$m_edit->insertGetId($update);
        if($eid>0){
            $data_content=[
                'eid'=>$eid,
                'content'=>$content,
            ];
            db('edit_info')->insert($data_content);
        }else{
            $m_edit->rollback();
            $this->error('保存数据错误，请重试');
        }
        //记录操作记录
        $link=url('admin/'.$table.'/content_edit_info',['id'=>$eid]);
        $data_action=[
            'aid'=>$admin['id'],
            'time'=>$time,
            'ip'=>get_client_ip(),
            'action'=>'编辑'.$flag.'技术资料'.$info['id'].'-'.$info['name'],
            'table'=>$table,
            'type'=>'edit',
            'pid'=>$info['id'],
            'link'=>$link,
            'shop'=>$admin['shop'],
        ];
        db('action')->insert($data_action);
        $m_edit->commit();
        $this->success('已提交修改');
    }
    /**
     * 产品技术资料编辑详情
     * @adminMenu(
     *     'name'   => '产品技术资料编辑详情',
     *     'parent' => 'index',
     *     'display'=> false,
     *     'hasView'=> false,
     *     'order'  => 10,
     *     'icon'   => '',
     *     'remark' => '产品技术资料编辑详情',
     *     'param'  => ''
     * )
     */
    public function content_edit_info()
    {
        $m=$this->m;
        $eid=$this->request->param('id',0,'intval');
        $table=$this->table;
        //获取编辑信息
        $m_edit=db('edit');
        $info1=$m_edit->where('id',$eid)->find();
        if(empty($info1)){
            $this->error('编辑信息不存在');
        }
        //获取改变的信息
        $change=db('edit_info')->where('eid',$eid)->value('content');
        
        $id=$info1['pid'];
        $info=$m->where('id',$id)->find();
        if(empty($info)){
            $this->error('数据不存在');
        }
        $content=db('goods_tech')->where('pid',$id)->value('content');
        
        $this->assign('info1',$info1);
        $this->assign('content',$content);
        $this->assign('change',$change);
        
        return $this->fetch();
        
    }
    /**
     * 产品技术资料编辑审核
     * @adminMenu(
     *     'name'   => '产品技术资料编辑审核',
     *     'parent' => 'index',
     *     'display'=> false,
     *     'hasView'=> false,
     *     'order'  => 10,
     *     'icon'   => '',
     *     'remark' => '产品技术资料编辑审核',
     *     'param'  => ''
     * )
     */
    public function content_edit_review()
    {
        //审核编辑的信息
        $status=$this->request->param('rstatus',0,'intval');
        $id=$this->request->param('id',0,'intval');
        if(($status!=2 && $status!=3) || $id<=0){
            $this->error('信息错误');
        }
        $m=$this->m;
        $table=$this->table;
        $m_edit=db('edit');
        $info=$m_edit
        ->field('e.*,p.name as pname,a.user_nickname as aname')
        ->alias('e')
        ->join('cmf_'.$table.' p','p.id=e.pid')
        ->join('cmf_user a','a.id=e.aid')
        ->where('e.id',$id)
        ->find();
        if(empty($info)){
            $this->error('无效信息');
        }
        if($info['rstatus']!=1){
            $this->error('编辑信息已被审核！不能重复审核');
        }
        
        $admin=$this->admin;
        //其他店铺的审核判断
        if($admin['shop']!=1){
            if(empty($info['shop']) || $info['shop']!=$admin['shop']){
                $this->error('不能审核其他店铺的信息');
            }
        }
        $time=time();
        
        $m->startTrans();
        
        $update=[
            'rid'=>$admin['id'],
            'rtime'=>$time,
            'rstatus'=>$status,
        ];
        //只有未审核的才能更新
        $where=[
            'id'=>$id,
            'rstatus'=>1,
        ];
        $row=$m_edit->where($where)->update($update);
        if($row!==1){
            $m->rollback();
            $this->error('审核失败，请刷新后重试');
        }
        //是否更新,2同意，3不同意
        if($status==2){
            //组装更新数据
            $update_info=[
                'time'=>$time,
            ];
           
                //统计图片文件数量
                //$update_info[$file_type[$k][0]]=count($v);
          
            $row=$m->where('id',$info['pid'])->update($update_info);
            if($row!==1){
                $m->rollback();
                $this->error('信息更新失败，请刷新后重试');
            }
            $content=db('edit_info')->where('eid',$id)->value('content');
            $where_delete=['pid'=>$info['pid']];
            $data_add=[
                'pid'=>$info['pid'],
                'content'=>$content,
            ];
            //检查是否存在，更新或添加
            $m_content=db('goods_tech');
            $find=$m_content->where($where_delete)->find();
            if(empty($find)){
                $m_content->insertAll($data_add);
            }else{
                $m_content->where($where_delete)->update($data_add);
            }
        }
        
        //审核成功，记录操作记录,发送审核信息
        $flag=$this->flag;
        $review_status=$this->review_status;
        //记录操作记录
        $link=url('admin/'.$table.'/content_edit_info',['id'=>$info['id']]);
        $data_action=[
            'aid'=>$admin['id'],
            'time'=>$time,
            'ip'=>get_client_ip(),
            'action'=>'审核'.$info['aid'].'-'.$info['aname'].'对'.$flag.$info['pid'].'-'.$info['pname'].'的技术资料为'.$review_status[$status],
            'table'=>$table,
            'type'=>'edit_review',
            'pid'=>$info['pid'],
            'link'=>$link,
            'shop'=>$admin['shop'],
        ];
        //发送审核信息
        $data_msg=[
            'aid'=>1,
            'time'=>$time,
            'uid'=>$info['aid'],
            'dsc'=>'对'.$flag.$info['pid'].'-'.$info['pname'].'的技术资料已审核，结果为'.$review_status[$status],
            'type'=>'edit_review',
            'link'=>$link,
            'shop'=>$admin['shop'],
        ];
        db('action')->insert($data_action);
        db('msg')->insert($data_msg);
        
        $m->commit();
        $this->success('审核成功');
    }
    /**
     * 产品状态批量同意
     * @adminMenu(
     *     'name'   => '产品状态批量同意',
     *     'parent' => 'index',
     *     'display'=> false,
     *     'hasView'=> false,
     *     'order'  => 10,
     *     'icon'   => '',
     *     'remark' => '产品状态批量同意',
     *     'param'  => ''
     * )
     */
    public function review_all()
    {
        if(empty($_POST['ids'])){
            $this->error('未选中信息');
        }
        $ids=$_POST['ids'];
        $m=$this->m;
        $admin=$this->admin;
        $time=time();
        $where=[
            'id'=>['in',$ids],
            'status'=>['eq',1],
        ];
        //其他店铺检查,如果没有shop属性就只能是1号主站操作,有shop属性就带上查询条件
        if($admin['shop']!=1){
            $tmp=$m->where($where)->find();
            if(empty($tmp['shop']) || $tmp['shop']!=$admin['shop']){
                $this->error('不能审核其他店铺的信息');
            }else{
                $where['shop']=['eq',$admin['shop']];
            }
        }
        
        $update=[
            'status'=>2,
            'time'=>$time,
            'rid'=>$admin['id'],
            'rtime'=>$time,
        ];
        //得到要更改的数据
        $list=$m->where($where)->column('id,aid,name');
        $ids=implode(',',array_keys($list));
        
        //审核成功，记录操作记录,发送审核信息
        $flag=$this->flag;
        
        $table=$this->table;
        //记录操作记录
        $data_action=[
            'aid'=>$admin['id'],
            'time'=>$time,
            'ip'=>get_client_ip(),
            'action'=>'批量同意'.$flag.'('.$ids.')',
            'table'=>$table,
            'type'=>'review_all',
            'link'=>'',
            'shop'=>$admin['shop'],
        ];
        $link0=url('admin/'.$table.'/edit','',false,false);
        foreach($list as $k=>$v){
            //发送审核信息
            $data_msg[]=[
                'aid'=>1,
                'time'=>$time,
                'uid'=>$v['aid'],
                'dsc'=>'对'.$flag.$v['id'].'-'.$v['name'].'已批量审核，结果为同意',
                'type'=>'review',
                'link'=>$link0.'/id/'.$v['id'],
                'shop'=>$admin['shop'],
            ];
        }
        $m->startTrans();
        $rows=$m->where($where)->update($update);
        if($rows<=0){
            $m->rollback();
            $this->error('没有数据审核成功，批量审核只能把未审核的数据审核为正常');
        }
        db('action')->insert($data_action);
        db('msg')->insertAll($data_msg);
        $m->commit();
        $this->success('审核成功'.$rows.'条数据');
    }
    /**
     * 产品禁用
     * @adminMenu(
     *     'name'   => '信息状态禁用',
     *     'parent' => 'index',
     *     'display'=> false,
     *     'hasView'=> false,
     *     'order'  => 10,
     *     'icon'   => '',
     *     'remark' => '信息状态禁用',
     *     'param'  => ''
     * )
     */
    public function ban()
    {
        //区分是一个还是数组
        $id=$this->request->param('id',0,'intval');
        
        $where=['status'=>['eq',2]];
        if($id>0){
            $where['id']=['eq',$id];
        }elseif(empty($_POST['ids'])){
            $this->error('未选中信息');
        }else{
            $ids=$_POST['ids'];
            $where['id']=['in',$ids];
        }
        
        $m=$this->m;
        
        $update=['status'=>4];
        $rows=$m->where($where)->update($update);
        
        if($rows>=1){
            
            $this->success('已禁用'.$rows.'条数据');
        }else{
            $this->error('没有成功禁用数据，禁用是指将状态为正常改为禁用');
        }
    }
    /**
     * 产品信息状态恢复
     * @adminMenu(
     *     'name'   => '产品信息状态恢复',
     *     'parent' => 'index',
     *     'display'=> false,
     *     'hasView'=> false,
     *     'order'  => 10,
     *     'icon'   => '',
     *     'remark' => '产品信息状态恢复',
     *     'param'  => ''
     * )
     */
    public function cancel_ban()
    {
        //区分是一个还是数组
        $id=$this->request->param('id',0,'intval');
        
        $where=['status'=>['eq',4]];
        if($id>0){
            $where['id']=['eq',$id];
        }elseif(empty($_POST['ids'])){
            $this->error('未选中信息');
        }else{
            $ids=$_POST['ids'];
            $where['id']=['in',$ids];
        }
        
        $m=$this->m;
        $update=['status'=>2];
        $rows=$m->where($where)->update($update);
        
        if($rows>=1){
            $this->success('已恢复'.$rows.'条数据');
        }else{
            $this->error('没有成功恢复数据,恢复是指将状态为禁用改为正常');
        }
    }
    /**
     * 产品编辑提交
     * @adminMenu(
     *     'name'   => '产品编辑提交',
     *     'parent' => 'index',
     *     'display'=> false,
     *     'hasView'=> false,
     *     'order'  => 10,
     *     'icon'   => '',
     *     'remark' => '产品编辑提交',
     *     'param'  => ''
     * )
     */
    public function edit_do()
    {
        $m=$this->m;
        $table=$this->table;
        $flag=$this->flag;
        $data0=$this->request->param();
        //检查不合法参数
        $data=$this->param_check($data0);
        if(!is_array($data)){
            $this->error($data);
        }
         
        $info=$m->where('id',$data['id'])->find();
        if(empty($info)){
            $this->error('数据不存在');
        }
        $time=time();
        $admin=$this->admin;
        //其他店铺的审核判断
        if($admin['shop']!=1){
            if(empty($info['shop']) || $info['shop']!=$admin['shop']){
                $this->error('不能编辑其他店铺的信息');
            }
        }
        $update=[
            'pid'=>$info['id'],
            'aid'=>$admin['id'],
            'atime'=>$time,
            'table'=>$table,
            'rstatus'=>1,
            'rid'=>0,
            'rtime'=>0,
            'shop'=>$admin['shop'],
        ];
        //产品的字段
        $fields=['cid','cid0','code_num','code_name','code','name','name2','name3',
            'type','sn_type','sn','brand','bchar','weight0','length0','width0',
            'height0','size0','is_box','weight1','length1','width1',
            'height1','size1','template','price','price_sale','price_in','price_cost',
            'price_min','price_range1','price_range2','price_range3','price_dealer1',
            'price_dealer2','price_dealer3','price_trade','price_factory','sort','dsc',
        ];
        $content=[];
       
        //检测改变了哪些字段
        foreach($fields as $k=>$v){
            //如果原信息和$data信息相同就未改变，不为相同就记录
            if(isset($data[$v]) && $info[$v]!=$data[$v]){
                $content[$v]=$data[$v];
            } 
        }
         
         //技术参数记录,新旧参数比较  
         if(is_array($data['value'])){
             $params=[];
             if(!empty($data['value'])){ 
                 foreach($data['value'] as $k=>$v){
                     if(is_array($v)){
                         $v=implode(',', $v);
                     }
                     $params[$k]=$v;
                 }
             }
             //检测技术参数
             if(isset($content['template'])){
                 //模板改变直接变了
                 $content['param']=json_encode($params);
             }else{
                 //模板没变就需要比较
                 $params0= db('goods_param')->where('pid',$info['id'])->column('param_id,value');
                 
                 //计算新旧参数的差级，没有差级就是完全一样
                 
                 if(!empty(array_diff($params0,$params)) ||  !empty(array_diff($params,$params0))){
                     $content['param']=json_encode($params);
                     //参数有改变，要记住模板
                     $content['template']=$data['template'];
                 }
             }
         } 
          
        if(empty($content)){
            $this->error('未修改');
        }
        //保存更改
        $m_edit=db('edit');
        $m_edit->startTrans();
        $eid=$m_edit->insertGetId($update);
        if($eid>0){
            $data_content=[
                'eid'=>$eid,
                'content'=>json_encode($content),
            ];
            db('edit_info')->insert($data_content);
        }else{
            $m_edit->rollback();
            $this->error('保存数据错误，请重试');
        }
        //记录操作记录
        $link=url('admin/'.$table.'/edit_info',['id'=>$eid]);
        $data_action=[
            'aid'=>$admin['id'],
            'time'=>$time,
            'ip'=>get_client_ip(),
            'action'=>'编辑'.$flag.$info['id'].'-'.$info['name'],
            'table'=>$table,
            'type'=>'edit',
            'pid'=>$info['id'],
            'link'=>$link,
            'shop'=>$admin['shop'],
        ];
        db('action')->insert($data_action);
        $m_edit->commit();
        $this->success('已提交修改');
    }
    /**
     * 产品编辑列表
     * @adminMenu(
     *     'name'   => '产品编辑列表',
     *     'parent' => 'index',
     *     'display'=> false,
     *     'hasView'=> true,
     *     'order'  => 10,
     *     'icon'   => '',
     *     'remark' => '产品编辑列表',
     *     'param'  => ''
     * )
     */
    public function edit_list(){
        $table=$this->table;
        $m_edit=db('edit');
        $flag=$this->flag;
        $data=$this->request->param();
        //查找当前表的编辑
        $where=['e.table'=>['in',$this->tables]];
        //状态
        if(empty($data['status'])){
            $data['status']=0;
        }else{
            $where['e.rstatus']=['eq',$data['status']];
        }
        //编辑人
        if(empty($data['aid'])){
            $data['aid']=0;
        }else{
            $where['e.aid']=['eq',$data['aid']];
        }
        //审核人
        if(empty($data['rid'])){
            $data['rid']=0;
        }else{
            $where['e.rid']=['eq',$data['rid']];
        }
        //所属分类
        if(empty($data['cid'])){
            $data['cid']=0;
        }else{
            $where['p.cid']=['eq',$data['cid']];
        }
        //查询字段
        $types=config($table.'_search');
        if(empty($types)){
            $types=config('base_search');
        }
        //选择查询字段
        if(empty($data['type1'])){
            $data['type1']=key($types);
        }
        //搜索类型
        $search_types=config('search_types');
        if(empty($data['type2'])){
            $data['type2']=key($search_types);
        }
        //检查拼接搜索语句
        if(empty($data['name'])){
            $data['name']='';
        }else{
            $where['p.'.$data['type1']]=zz_search($data['type2'],$data['name']);
        }
        //时间类别
        $times=config('time2_search');
        if(empty($data['time'])){
            $data['time']=key($times);
            $data['datetime1']='';
            $data['datetime2']='';
        }else{
            //时间处理
            if(empty($data['datetime1'])){
                $data['datetime1']='';
                $time1=0;
                if(empty($data['datetime2'])){
                    $data['datetime2']='';
                    $time2=0;
                }else{
                    //只有结束时间
                    $time2=strtotime($data['datetime2']);
                    $where['e.'.$data['time']]=['elt',$time2];
                }
            }else{
                //有开始时间
                $time1=strtotime($data['datetime1']);
                if(empty($data['datetime2'])){
                    $data['datetime2']='';
                    $where['e.'.$data['time']]=['egt',$time1];
                }else{
                    //有结束时间有开始时间between
                    $time2=strtotime($data['datetime2']);
                    if($time2<=$time1){
                        $this->error('结束时间必须大于起始时间');
                    }
                    $where['e.'.$data['time']]=['between',[$time1,$time2]];
                }
            }
        }
        $field='e.*,p.name as pname';
        $join=[['cmf_'.$table.' p','e.pid=p.id','left']];
         
        $list=$m_edit
        ->alias('e')
        ->field('e.*,p.name as pname')
        ->join($join)
        ->where($where)
        ->order('e.rstatus asc,e.atime desc')
        ->paginate();
        
        // 获取分页显示
        $page = $list->appends($data)->render();
        $m_user=db('user');
        //创建人
        $where_aid=[
            'user_type'=>1,
            'shop'=>1,
        ];
        $aids=$m_user->where($where_aid)->column('id,user_nickname');
        //审核人
        $where_rid=[
            'user_type'=>1,
            'shop'=>1,
        ];
        $rids=$m_user->where($where_rid)->column('id,user_nickname');
        //分类信息
        $this->cates();
        $this->assign('page',$page);
        $this->assign('list',$list);
        $this->assign('aids',$aids);
        $this->assign('rids',$rids);
        $this->assign('data',$data);
        $this->assign('types',$types);
        $this->assign('times',$times);
        $this->assign("search_types", $search_types);
        return $this->fetch();
    }
    
    /**
     * 产品审核详情
     * @adminMenu(
     *     'name'   => '产品审核详情',
     *     'parent' => 'index',
     *     'display'=> false,
     *     'hasView'=> true,
     *     'order'  => 10,
     *     'icon'   => '',
     *     'remark' => '产品审核详情',
     *     'param'  => ''
     * )
     */
    public function edit_info()
    {
        $m=$this->m;
        $id=$this->request->param('id',0,'intval');
        $table=$this->table;
        //获取编辑信息
        $m_edit=db('edit');
        $info1=$m_edit->where('id',$id)->find();
        if(empty($info1)){
            $this->error('编辑信息不存在');
        }
        //获取改变的信息
        $change=db('edit_info')->where('eid',$id)->value('content');
        $change=json_decode($change,true);
        //获取原信息 
        
        $info=$m
        ->field('p.*,c.name as cname,c0.name as cname0,b.name as bname,t.name as tname,price.name as pname')
        ->alias('p')
        ->join('cmf_cate c','c.id=p.cid','left')
        ->join('cmf_cate c0','c0.id=p.cid0','left')
        ->join('cmf_brand b','b.id=p.brand','left')
        ->join('cmf_template t','t.id=p.template','left')
        ->join('cmf_price price','price.id=p.price','left')
        ->where('p.id',$info1['pid'])
        ->find();
        if(empty($info)){
            $this->error('原信息数据不存在');
        }
        
        //获取分类
        if(isset($change['cid'])){
            $cate=db('cate')
            ->field('c.name,c.fid,c0.name as fname')
            ->alias('c')
            ->join('cmf_cate c0','c0.id=c.fid')
            ->where('c.id',$change['cid'])
            ->find();
           if(empty($cate)){
               $change['cname0']='不存在';
               $change['cname']='分类'.$change['cid'].'不存在';
           }else{
               $change['cname0']=$cate['fname'];
               $change['cname']=$cate['name'];
               $change['cid0']=$cate['fid'];
           }
            
        }
        
        //品牌
        if(isset($change['brand'])){
            $change['bname']=db('brand')->where('id',$change['brand'])->value('name');
        }
        //参数模板
        if(isset($change['template'])){
            $change['tname']=db('template')->where('id',$change['template'])->value('name');
        } 
        //价格模板
        if(isset($change['price'])){
            $change['pname']=db('price')->where('id',$change['price'])->value('name');
        }
        
        //参数 
        $params1=[];
        $params0=[];
        $params01=[];
        $params11=[];
              
        //获取模板所有参数
        if($info['template']>0){
            $where=[
                'tp.t_id'=>$info['template'], 
            ];
            $params0=db('template_param')
            ->alias('tp')
            ->join('cmf_param p','tp.p_id=p.id')
            ->where($where)
            ->order('p.sort asc')
            ->column('p.id,p.name,p.type,p.dsc');
            
            if(!empty($params0)){ 
                //获取设置的参数
                $params1=db('goods_param')
                ->where('pid',$info['id'])
                ->column('param_id,value');
                //处理技术参数,没有获取参数值的要设置默认
                foreach($params0 as $k=>$v){ 
                    //没有设置的参数值要给空值
                    if(!isset($params1[$k])){
                        $params1[$k]='--';
                    } 
                }
            }
            
        }
        //修改的模板参数
        if(isset($change['param'])){
            $where=[
                'tp.t_id'=>$change['template'], 
            ];
            $params01=db('template_param')
            ->alias('tp')
            ->join('cmf_param p','tp.p_id=p.id')
            ->where($where)
            ->order('p.sort asc')
            ->column('p.id,p.name,p.type,p.dsc');
            
            if(!empty($params01)){ 
                //获取设置的参数
                $params11=json_decode($change['param'],true);
                //处理技术参数,没有获取参数值的要设置默认
                foreach($params01 as $k=>$v){ 
                    //没有设置的参数值要给空值
                    if(!isset($params11[$k])){
                        $params11[$k]='--';
                    } 
                }
            }
        }  
        $this->assign('params0',$params0);
        $this->assign('params1',$params1);
        $this->assign('params01',$params01);
        $this->assign('params11',$params11);
        
        $this->assign('info',$info);
        $this->assign('info1',$info1);
      
        $this->assign('change',$change);
        
        return $this->fetch();
    }
    /**
     * 产品信息编辑审核
     * @adminMenu(
     *     'name'   => '产品编辑审核',
     *     'parent' => 'index',
     *     'display'=> false,
     *     'hasView'=> false,
     *     'order'  => 10,
     *     'icon'   => '',
     *     'remark' => '产品编辑审核',
     *     'param'  => ''
     * )
     */
    public function edit_review()
    {
        //审核编辑的信息
        $status=$this->request->param('rstatus',0,'intval');
        $id=$this->request->param('id',0,'intval');
        if(($status!=2 && $status!=3) || $id<=0){
            $this->error('信息错误');
        }
        $m=$this->m;
        $table=$this->table;
        $m_edit=db('edit');
        $info=$m_edit
        ->field('e.*,p.name as pname,a.user_nickname as aname')
        ->alias('e')
        ->join('cmf_'.$table.' p','p.id=e.pid')
        ->join('cmf_user a','a.id=e.aid')
        ->where('e.id',$id)
        ->find();
        if(empty($info)){
            $this->error('无效信息');
        }
        if($info['rstatus']!=1){
            $this->error('编辑信息已被审核！不能重复审核');
        }
        
        $admin=$this->admin;
        //其他店铺的审核判断
        if($admin['shop']!=1){
            if(empty($info['shop']) || $info['shop']!=$admin['shop']){
                $this->error('不能审核其他店铺的信息');
            }
        }
        $time=time();
        
        $m->startTrans();
        
        $update=[
            'rid'=>$admin['id'],
            'rtime'=>$time,
            'rstatus'=>$status,
        ];
        //只有未审核的才能更新
        $where=[
            'id'=>$id,
            'rstatus'=>1,
        ];
        $row=$m_edit->where($where)->update($update);
        if($row!==1){
            $m->rollback();
            $this->error('审核失败，请刷新后重试');
        }
        //是否更新,2同意，3不同意
        if($status==2){
            //组装更新数据
            $update_info=[
                'time'=>$time,
            ];
            //得到修改的字段
            $change=db('edit_info')->where('eid',$id)->value('content');
            $change=json_decode($change,true);
            
            foreach($change as $k=>$v){
                $update_info[$k]=$v;
            }
            //得到原数据
            $info_tmp=$m->where('id',$info['pid'])->find();
            //修改了分类或编码
            if( (isset($update_info['cid']) || isset($update_info['code_num']))){
                 
                $cid=isset($update_info['cid'])?$update_info['cid']:$info_tmp['cid'];
                $code_num=isset($update_info['code_num'])?$update_info['code_num']:$info_tmp['code_num'];
                //检查编码是否合法
                $where=[
                    'code_num'=>$code_num,
                    'cid'=>$cid,
                    'id'=>['neq',$info['pid']],
                ];
                $tmp=$m->where($where)->find();
                if(!empty($tmp)){
                    $this->error('该编码已存在');
                }
                //产品编码和分类最大编码更新
                $m_cate=db('cate');
                $cate=$m_cate->where('id',$cid)->find();
                $update_info['code']=$cate['code'].'-'.str_pad($code_num, 2,'0',STR_PAD_LEFT);
                $update_info['cid0']=$cate['fid'];
                if($update_info['cid0']<=0){
                    $this->error('分类错误');
                }
                if($cate['max_num']<$code_num){
                    $m_cate->where('id',$cid)->update(['max_num'=>$code_num]);
                }
                
            }
            //处理技术参数
            if(isset($update_info['param'])){
                $params=json_decode($update_info['param'],true);
                unset($update_info['param']);
                $param_add=[];
                
                foreach($params as $k=>$v){
                    $param_add[]=[
                        'pid'=>$info['pid'],
                        'param_id'=>$k,
                        'value'=>$v,
                    ]; 
                }
                db('goods_param')->where('pid',$info['pid'])->delete();
                if(!empty($param_add)){
                    db('goods_param')->insertAll($param_add);
                } 
            }
            $row=$m->where('id',$info['pid'])->update($update_info);
            if($row!==1){
                $m->rollback();
                $this->error('信息更新失败，请刷新后重试');
            }
            
        }
         
        //审核成功，记录操作记录,发送审核信息
        $flag=$this->flag;
        $review_status=$this->review_status;
        //记录操作记录
        $link=url('admin/'.$table.'/edit_info',['id'=>$info['id']]);
        $data_action=[
            'aid'=>$admin['id'],
            'time'=>$time,
            'ip'=>get_client_ip(),
            'action'=>'审核'.$info['aid'].'-'.$info['aname'].'对'.$flag.$info['pid'].'-'.$info['pname'].'的编辑为'.$review_status[$status],
            'table'=>$table,
            'type'=>'edit_review',
            'pid'=>$info['pid'],
            'link'=>$link,
            'shop'=>$admin['shop'],
        ];
        //发送审核信息
        $data_msg=[
            'aid'=>1,
            'time'=>$time,
            'uid'=>$info['aid'],
            'dsc'=>'对'.$flag.$info['pid'].'-'.$info['pname'].'的编辑已审核，结果为'.$review_status[$status],
            'type'=>'edit_review',
            'link'=>$link,
            'shop'=>$admin['shop'],
        ];
        db('action')->insert($data_action);
        db('msg')->insert($data_msg);
        
        $m->commit();
        $this->success('审核成功');
    }
    /**
     * 产品编辑记录批量删除
     * @adminMenu(
     *     'name'   => '产品编辑记录批量删除',
     *     'parent' => 'index',
     *     'display'=> false,
     *     'hasView'=> false,
     *     'order'  => 10,
     *     'icon'   => '',
     *     'remark' => '产品编辑记录批量删除',
     *     'param'  => ''
     * )
     */
    public function edit_del_all()
    {
        if(empty($_POST['ids'])){
            $this->error('未选中信息');
        }
        $eids=$_POST['ids'];
        
        $admin=$this->admin;
        $table=$this->table;
       
        $m_edit=db('edit');
        $time=time();
        $where=[
            'e.id'=>['in',$eids],
            'e.table'=>['in',$this->tables],
        ];
        
        //其他店铺检查,如果没有shop属性就只能是1号主站操作,有shop属性就带上查询条件
        if($admin['shop']!=1){
            
            $tmp=$m_edit
            ->field('e.*')
            ->alias('e')
            ->where($where)
            ->find();
            if($tmp['shop']!=$admin['shop']){
                $this->error('不能审核其他店铺的信息');
            }else{
                $where['e.shop']=['eq',$admin['shop']];
            }
        }
        
        //得到要删除的数据
        $list=$m_edit
        ->alias('e')
        ->join('cmf_'.$table.' p','p.id=e.pid','left')
        ->where($where)
        ->column('e.*,p.name as pname');
        
        if(empty($list)){
            $this->error('没有要删除的数据');
        }
        $eidss=implode(',',array_keys($list));
        
        //审核成功，记录操作记录,发送审核信息
        $flag=$this->flag;
        
        //记录操作记录
        $data_action=[
            'aid'=>$admin['id'],
            'time'=>$time,
            'ip'=>get_client_ip(),
            'action'=>'批量删除'.$flag.'编辑记录('.$eidss.')',
            'table'=>$table,
            'type'=>'edit_del',
            'link'=>'',
            'shop'=>$admin['shop'],
        ];
        
        foreach($list as $k=>$v){
            
            //发送审核信息
            $data_msg[]=[
                'aid'=>1,
                'time'=>$time,
                'uid'=>$v['aid'],
                'dsc'=>date('Y-m-d H:i',$v['atime']).'对'.$flag.$v['pid'].'-'.$v['pname'].'的编辑记录已批量删除',
                'type'=>'edit_del',
                'link'=>'',
                'shop'=>$admin['shop'],
            ];
        }
        $m_edit->startTrans();
        //id 删除
        $where_edit=[
            'table'=>['in',$this->tables],
            'id'=>['in',$eids],
        ];
        
        $rows=$m_edit->where($where_edit)->delete();
        if($rows<=0){
            $m_edit->rollback();
            $this->error('没有删除数据');
        }
        //删除编辑详情
        db('edit_info')->where(['eid'=>['in',$eids]])->delete();
        db('action')->insert($data_action);
        db('msg')->insertAll($data_msg);
        $m_edit->commit();
        $this->success('已批量删除'.$rows.'条数据');
    }
    /**
     * 产品批量删除
     * @adminMenu(
     *     'name'   => '产品批量删除',
     *     'parent' => 'index',
     *     'display'=> false,
     *     'hasView'=> false,
     *     'order'  => 10,
     *     'icon'   => '',
     *     'remark' => '产品批量删除',
     *     'param'  => ''
     * )
     */
    public function del_all()
    {
        if(empty($_POST['ids'])){
            $this->error('未选中信息');
        }
        $ids=$_POST['ids'];
        
        $m=$this->m;
        $flag=$this->flag;
        $table=$this->table;
        $admin=$this->admin;
        $time=time();
        //彻底删除
        $where=['id'=>['in',$ids]];
        //其他店铺检查,如果没有shop属性就只能是1号主站操作,有shop属性就带上查询条件
        if($admin['shop']!=1){
            $tmp=$m
            ->where($where)
            ->find();
            if(empty($tmp['shop']) || $tmp['shop']!=$admin['shop']){
                $this->error('只能操作自己店铺的信息');
            }else{
                $where['shop']=['eq',$admin['shop']];
            }
        }
        
        $count=count($ids);
        $m->startTrans();
        $tmp=$m->where($where)->delete();
        if($tmp!==$count){
            $m->rollback();
            $this->error('删除数据失败，请刷新重试');
        }
        
        //记录操作记录
        $idss=implode(',',$ids);
        $data_action=[
            'aid'=>$admin['id'],
            'time'=>$time,
            'ip'=>get_client_ip(),
            'action'=>'批量删除'.$flag.'('.$idss.')',
            'table'=>$table,
            'type'=>'del',
            'link'=>'',
            'shop'=>$admin['shop'],
        ];
        db('action')->insert($data_action);
        
        //删除关联编辑记录
        $where_edit=[
            'table'=>['eq',$table],
            'pid'=>['in',$ids],
        ];
        //现获取编辑id来删除info
        $eids=db('edit')->where($where_edit)->column('id');
        if(!empty($eids)){
            db('edit_info')->where(['eid'=>['in',$eids]])->delete();
            db('edit')->where(['id'=>['in',$eids]])->delete();
        }
        //参数参数对应
        db('goods_param')->where(['pid'=>['in',$ids]])->delete();
        $m->commit();
        $this->success('成功删除数据'.$tmp.'条');
        
    }
    //获取分类信息
    public function cates(){
        //分类
        $m_cate=db('cate');
        $where_cate=[
            'fid'=>0,
            'status'=>2,
        ];
        $cates0=$m_cate->where($where_cate)->order('sort asc,code_num asc')->column('id,name,code');
        $where_cate=[
            'fid'=>['neq',0],
            'status'=>['eq',2],
        ];
        $cates=$m_cate->where($where_cate)->order('sort asc,code_num asc')->column('id,name,fid,code');
        $this->assign('cates0',$cates0);
        $this->assign('cates',$cates);
    }
    //获取品牌信息
    public function brands(){
        //分类 
        $bcates=config('chars');
        $where_brand=[ 
            'status'=>['eq',2],
        ];
        $brands=db('brand')->where($where_brand)->order('sort asc')->column('id,name,char');
        $this->assign('bcates',$bcates);
        $this->assign('brands',$brands);
    }
    //获取权限信息
    public function auth_get($id,$str='admin/goods/'){
        $actions=[];
        //检测是否超级管理员
        if($id==1){
            $actions['auth']=1;
            return $actions;
        }
        $roles=db('role_user')->where('user_id',$id)->column('role_id');
        //检测是否超级管理员
        if(in_array(1,$roles)){
            $actions['auth']=1;
        } else{
            $where=[
                'role_id'=>['in',$roles],
                'rule_name'=>['like',$str.'%'],
            ];
            $len=strlen($str)+1;
            $actions=db('auth_access')->where($where)->column("substring(rule_name,$len)");
            $actions=array_flip($actions);
        }
        return $actions;
    }
    //检查产品参数
    public function param_check($data0){
        
        $data=[
            'cid'=>$data0['cid'],
            'code_num'=>intval($data0['code_num']),
            'code_name'=>$data0['code_name'],
            'name'=>$data0['name'],
            'sort'=>intval($data0['sort']),
            'dsc'=>$data0['dsc'],
            'type'=>$data0['type'],
            'sn_type'=>$data0['sn_type'],
            'sn'=>$data0['sn'],
            'name2'=>$data0['name2'],
            'name3'=>$data0['name3'],
            'brand'=>$data0['brand'],
            'bchar'=>$data0['bchar'],
        ];
        if(empty($data['code_num'])){
            return ('未添加编码');
        }
        if(empty($data['name'])){
            return ('名称不能为空');
        }
        if(!empty($data0['id'])){
            $data['id']=intval($data0['id']);
        }
        if(empty($data['brand'])){
           $data['bchar']='';
        }
        //补充分类和编码
        $cate=db('cate')
        ->field('c.*,f.name as fname')
        ->alias('c')
        ->join('cmf_cate f','f.id=c.fid')
        ->where('c.id',$data['cid'])
        ->find();
        if(empty($cate) || $cate['fid']==0){
            return ('分类选择不合法');
        } 
        $data['cid0']=$cate['fid'];
        $data['code']=$cate['code'].'-'.str_pad($data['code_num'], 2,'0',STR_PAD_LEFT);
        $m=$this->m;
        $where=[
           'cid'=>$data['cid'],
           'code_num'=>$data['code_num'], 
        ];
        if(!empty($data['id'])){
            $where['id']=['neq',$data['id']];
        }
        $tmp=$m->where($where)->find();
        if(!empty($tmp)){
            return '编码已被占用';
        }
         //转化基本参数
        $data['weight0']=round($data0['weight0'],2);
        $data['length0']=round($data0['length0'],2);
        $data['width0']=round($data0['width0'],2);
        $data['height0']=round($data0['height0'],2);
        $data['is_box']=intval($data0['is_box']);
        
        $data['weight1']=round($data0['weight1'],2);
        $data['length1']=round($data0['length1'],2);
        $data['width1']=round($data0['width1'],2);
        $data['height1']=round($data0['height1'],2);
        
        if($data['weight0'] <= 0){
            return '请填写产品重量';
        } 
        if($data['length0'] <= 0){
            return '请填写产品长度';
        }
        if($data['width0'] <= 0){
            return '请填写产品宽度';
        }
        if($data['height0'] <= 0){
            return '请填写产品高度';
        }
        $data['size0']=bcmul($data['length0']*$data['width0'],$data['height0']);
        
        if($data['is_box']==2){
            $data['weight1']=$data['weight0'];
            $data['length1']=$data['length0'];
            $data['width1']=$data['width0'];
            $data['height1']=$data['height0'];
            $data['size1']=$data['size0'];
        }else{
            $data['weight1']=round($data['weight1'],2);
            $data['length1']=round($data['length1'],2);
            $data['width1']=round($data['width1'],2);
            $data['height1']=round($data['height1'],2);
            if($data['weight1'] <= 0){
                return '请填写产品毛重量';
            }
            if($data['length1'] <= 0){
                return '请填写产品内盒长度';
            }
            if($data['width1'] <= 0){
                return '请填写产品内盒宽度';
            }
            if($data['height1'] <= 0){
                return '请填写产品内盒高度';
            }
            $data['size1']=bcmul($data['length1']*$data['width1'],$data['height1']);
        }
        //检测价格权限 
        $admin=$this->admin;
        $actions=$this->auth_get($admin['id']);
        //所有权限
        if(isset($actions['auth'])){
            $all=1;
        }else{
            $all=0;
        }
        //template技术参数
        if($all || isset($actions['template_set'])){
            $data['template']=intval($data0['template']); 
        } 
        if($all || isset($actions['param_set'])){ 
            if(empty($data0['value'])){
                $data['value']=[];
            }else{
                $data['value']=$data0['value'];
            }
        }else{
            $data['value']=0;
        }
        //价格模板
        $data['price_sale']=round($data0['price_sale'],2);
        if($all || isset($actions['price_set'])){
            $data['price']=intval($data0['price']);
        }
        if($all || isset($actions['price_in_set'])){
            $data['price_in']=round($data0['price_in'],2);
        }
        if($all || isset($actions['price_cost_set'])){
            $data['price_cost']=round($data0['price_cost'],2);
        }
        if($all || isset($actions['price_min_set'])){
            $data['price_min']=intval($data0['price_min']);
        }
        if($all || isset($actions['price_range_set'])){
            $data['price_range1']=round($data0['price_range1'],2);
            $data['price_range2']=round($data0['price_range2'],2);
            $data['price_range3']=round($data0['price_range3'],2);
        }
        if($all || isset($actions['price_dealer1_set'])){
            $data['price_dealer1']=round($data0['price_dealer1'],2);
        }
        if($all || isset($actions['price_dealer2_set'])){
            $data['price_dealer2']=round($data0['price_dealer2'],2);
        }
        if($all || isset($actions['price_dealer3_set'])){
            $data['price_dealer3']=round($data0['price_dealer3'],2);
        }
        if($all || isset($actions['price_trade_set'])){
            $data['price_trade']=round($data0['price_trade'],2);
        }
        if($all || isset($actions['price_factory_set'])){
            $data['price_factory']=round($data0['price_factory'],2);
        }
       
        return $data;
    }
    
    /**
     * 产品入库价设置
     * @adminMenu(
     *     'name'   => '产品入库价设置',
     *     'parent' => 'index',
     *     'display'=> false,
     *     'hasView'=> false,
     *     'order'  =>91,
     *     'icon'   => '',
     *     'remark' => '产品入库价设置',
     *     'param'  => ''
     * )
     */
    public function price_in_set(){
        $this->success('ok');
    }
    /**
     * 产品出库价设置
     * @adminMenu(
     *     'name'   => '产品出库价设置',
     *     'parent' => 'index',
     *     'display'=> false,
     *     'hasView'=> false,
     *     'order'  =>92,
     *     'icon'   => '',
     *     'remark' => '产品出库价设置',
     *     'param'  => ''
     * )
     */
    public function price_cost_set(){
        $this->success('ok');
    }
    /**
     * 产品最低销售价设置
     * @adminMenu(
     *     'name'   => '产品最低销售价设置',
     *     'parent' => 'index',
     *     'display'=> false,
     *     'hasView'=> false,
     *     'order'  =>93,
     *     'icon'   => '',
     *     'remark' => '产品最低销售价设置',
     *     'param'  => ''
     * )
     */
    public function price_min_set(){
        $this->success('ok');
    }
    /**
     * 产品区间价格设置
     * @adminMenu(
     *     'name'   => '产品区间价设置',
     *     'parent' => 'index',
     *     'display'=> false,
     *     'hasView'=> false,
     *     'order'  =>94,
     *     'icon'   => '',
     *     'remark' => '产品区间1价设置',
     *     'param'  => ''
     * )
     */
    public function price_range_set(){
        $this->success('ok');
    }
    /**
     * 产品经销价1设置
     * @adminMenu(
     *     'name'   => '产品经销价1设置',
     *     'parent' => 'index',
     *     'display'=> false,
     *     'hasView'=> false,
     *     'order'  =>95,
     *     'icon'   => '',
     *     'remark' => '产品经销价1设置',
     *     'param'  => ''
     * )
     */
    public function price_dealer1_set(){
        $this->success('ok');
    }
    /**
     * 产品经销价2设置
     * @adminMenu(
     *     'name'   => '产品经销价2设置',
     *     'parent' => 'index',
     *     'display'=> false,
     *     'hasView'=> false,
     *     'order'  =>96,
     *     'icon'   => '',
     *     'remark' => '产品经销价2设置',
     *     'param'  => ''
     * )
     */
    public function price_dealer2_set(){
        $this->success('ok');
    }
    /**
     * 产品经销价3设置
     * @adminMenu(
     *     'name'   => '产品经销价3设置',
     *     'parent' => 'index',
     *     'display'=> false,
     *     'hasView'=> false,
     *     'order'  =>97,
     *     'icon'   => '',
     *     'remark' => '产品经销价3设置',
     *     'param'  => ''
     * )
     */
    public function price_dealer3_set(){
        $this->success('ok');
    }
    /**
     * 产品同行价设置
     * @adminMenu(
     *     'name'   => '产品同行价设置',
     *     'parent' => 'index',
     *     'display'=> false,
     *     'hasView'=> false,
     *     'order'  =>97,
     *     'icon'   => '',
     *     'remark' => '产品同行价设置',
     *     'param'  => ''
     * )
     */
    public function price_trade_set(){
        $this->success('ok');
    }
    /**
     * 产品工厂配套价设置
     * @adminMenu(
     *     'name'   => '产品工厂配套价设置',
     *     'parent' => 'index',
     *     'display'=> false,
     *     'hasView'=> false,
     *     'order'  =>98,
     *     'icon'   => '',
     *     'remark' => '产品工厂配套价设置',
     *     'param'  => ''
     * )
     */
    public function price_factory_set(){
        $this->success('ok');
    }
    
    /**
     * 产品入库价查看
     * @adminMenu(
     *     'name'   => '产品入库价查看',
     *     'parent' => 'index',
     *     'display'=> false,
     *     'hasView'=> false,
     *     'order'  =>101,
     *     'icon'   => '',
     *     'remark' => '产品入库价查看',
     *     'param'  => ''
     * )
     */
    public function price_in_get(){
        $this->success('ok');
    }
    /**
     * 产品出库价查看
     * @adminMenu(
     *     'name'   => '产品出库价查看',
     *     'parent' => 'index',
     *     'display'=> false,
     *     'hasView'=> false,
     *     'order'  =>102,
     *     'icon'   => '',
     *     'remark' => '产品出库价查看',
     *     'param'  => ''
     * )
     */
    public function price_cost_get(){
        $this->success('ok');
    }
    /**
     * 产品最低销售价查看
     * @adminMenu(
     *     'name'   => '产品最低销售价查看',
     *     'parent' => 'index',
     *     'display'=> false,
     *     'hasView'=> false,
     *     'order'  =>103,
     *     'icon'   => '',
     *     'remark' => '产品最低销售价查看',
     *     'param'  => ''
     * )
     */
    public function price_min_get(){
        $this->success('ok');
    }
    /**
     * 产品区间价格查看
     * @adminMenu(
     *     'name'   => '产品区间价查看',
     *     'parent' => 'index',
     *     'display'=> false,
     *     'hasView'=> false,
     *     'order'  =>104,
     *     'icon'   => '',
     *     'remark' => '产品区间1价查看',
     *     'param'  => ''
     * )
     */
    public function price_range_get(){
        $this->success('ok');
    }
    /**
     * 产品经销价1查看
     * @adminMenu(
     *     'name'   => '产品经销价1查看',
     *     'parent' => 'index',
     *     'display'=> false,
     *     'hasView'=> false,
     *     'order'  =>105,
     *     'icon'   => '',
     *     'remark' => '产品经销价1查看',
     *     'param'  => ''
     * )
     */
    public function price_dealer1_get(){
        $this->success('ok');
    }
    /**
     * 产品经销价2查看
     * @adminMenu(
     *     'name'   => '产品经销价2查看',
     *     'parent' => 'index',
     *     'display'=> false,
     *     'hasView'=> false,
     *     'order'  =>106,
     *     'icon'   => '',
     *     'remark' => '产品经销价2查看',
     *     'param'  => ''
     * )
     */
    public function price_dealer2_get(){
        $this->success('ok');
    }
    /**
     * 产品经销价3查看
     * @adminMenu(
     *     'name'   => '产品经销价3查看',
     *     'parent' => 'index',
     *     'display'=> false,
     *     'hasView'=> false,
     *     'order'  =>107,
     *     'icon'   => '',
     *     'remark' => '产品经销价3查看',
     *     'param'  => ''
     * )
     */
    public function price_dealer3_get(){
        $this->success('ok');
    }
    /**
     * 产品同行价查看
     * @adminMenu(
     *     'name'   => '产品同行价查看',
     *     'parent' => 'index',
     *     'display'=> false,
     *     'hasView'=> false,
     *     'order'  =>107,
     *     'icon'   => '',
     *     'remark' => '产品同行价查看',
     *     'param'  => ''
     * )
     */
    public function price_trade_get(){
        $this->success('ok');
    }
    /**
     * 产品工厂配套价查看
     * @adminMenu(
     *     'name'   => '产品工厂配套价查看',
     *     'parent' => 'index',
     *     'display'=> false,
     *     'hasView'=> false,
     *     'order'  =>108,
     *     'icon'   => '',
     *     'remark' => '产品工厂配套价查看',
     *     'param'  => ''
     * )
     */
    public function price_factory_get(){
        $this->success('ok');
    }
    /**
     * 实物图片设置
     * @adminMenu(
     *     'name'   => '实物图片设置',
     *     'parent' => 'index',
     *     'display'=> false,
     *     'hasView'=> false,
     *     'order'  =>110,
     *     'icon'   => '',
     *     'remark' => '实物图片设置',
     *     'param'  => ''
     * )
     */
    public function pic_pro_set(){
        $this->success('ok');
    }
    /**
     * logo图片设置
     * @adminMenu(
     *     'name'   => 'logo图片设置',
     *     'parent' => 'index',
     *     'display'=> false,
     *     'hasView'=> false,
     *     'order'  =>111,
     *     'icon'   => '',
     *     'remark' => 'logo图片设置',
     *     'param'  => ''
     * )
     */
    public function pic_logo_set(){
        $this->success('ok');
    }
    /**
     * 规格图片设置
     * @adminMenu(
     *     'name'   => '规格图片设置',
     *     'parent' => 'index',
     *     'display'=> false,
     *     'hasView'=> false,
     *     'order'  =>112,
     *     'icon'   => '',
     *     'remark' => '规格图片设置',
     *     'param'  => ''
     * )
     */
    public function pic_param_set(){
        $this->success('ok');
    }
    /**
     * 原理图片设置
     * @adminMenu(
     *     'name'   => '原理图片设置',
     *     'parent' => 'index',
     *     'display'=> false,
     *     'hasView'=> false,
     *     'order'  =>113,
     *     'icon'   => '',
     *     'remark' => '原理图片设置',
     *     'param'  => ''
     * )
     */
    public function pic_principle_set(){
        $this->success('ok');
    }
    /**
     * 其他图片设置
     * @adminMenu(
     *     'name'   => '其他图片设置',
     *     'parent' => 'index',
     *     'display'=> false,
     *     'hasView'=> false,
     *     'order'  =>114,
     *     'icon'   => '',
     *     'remark' => '其他图片设置',
     *     'param'  => ''
     * )
     */
    public function pic_other_set(){
        $this->success('ok');
    }
    /**
     * 说明书设置
     * @adminMenu(
     *     'name'   => '说明书设置',
     *     'parent' => 'index',
     *     'display'=> false,
     *     'hasView'=> false,
     *     'order'  =>115,
     *     'icon'   => '',
     *     'remark' => '说明书设置',
     *     'param'  => ''
     * )
     */
    public function file_instructions_set(){
        $this->success('ok');
    }
    /**
     * 其他文档设置
     * @adminMenu(
     *     'name'   => '其他文档设置',
     *     'parent' => 'index',
     *     'display'=> false,
     *     'hasView'=> false,
     *     'order'  =>116,
     *     'icon'   => '',
     *     'remark' => '其他文档设置',
     *     'param'  => ''
     * )
     */
    public function file_other_set(){
        $this->success('ok');
    }
    
    /**
     * 实物图片查看
     * @adminMenu(
     *     'name'   => '实物图片查看',
     *     'parent' => 'index',
     *     'display'=> false,
     *     'hasView'=> false,
     *     'order'  =>120,
     *     'icon'   => '',
     *     'remark' => '实物图片查看',
     *     'param'  => ''
     * )
     */
    public function pic_pro_get(){
        $this->success('ok');
    }
    /**
     * logo图片查看
     * @adminMenu(
     *     'name'   => 'logo图片查看',
     *     'parent' => 'index',
     *     'display'=> false,
     *     'hasView'=> false,
     *     'order'  =>121,
     *     'icon'   => '',
     *     'remark' => 'logo图片查看',
     *     'param'  => ''
     * )
     */
    public function pic_logo_get(){
        $this->success('ok');
    }
    /**
     * 规格图片查看
     * @adminMenu(
     *     'name'   => '规格图片查看',
     *     'parent' => 'index',
     *     'display'=> false,
     *     'hasView'=> false,
     *     'order'  =>122,
     *     'icon'   => '',
     *     'remark' => '规格图片查看',
     *     'param'  => ''
     * )
     */
    public function pic_param_get(){
        $this->success('ok');
    }
    /**
     * 原理图片查看
     * @adminMenu(
     *     'name'   => '原理图片查看',
     *     'parent' => 'index',
     *     'display'=> false,
     *     'hasView'=> false,
     *     'order'  =>123,
     *     'icon'   => '',
     *     'remark' => '原理图片查看',
     *     'param'  => ''
     * )
     */
    public function pic_principle_get(){
        $this->success('ok');
    }
    /**
     * 其他图片查看
     * @adminMenu(
     *     'name'   => '其他图片查看',
     *     'parent' => 'index',
     *     'display'=> false,
     *     'hasView'=> false,
     *     'order'  =>124,
     *     'icon'   => '',
     *     'remark' => '其他图片查看',
     *     'param'  => ''
     * )
     */
    public function pic_other_get(){
        $this->success('ok');
    }
    /**
     * 说明书查看
     * @adminMenu(
     *     'name'   => '说明书查看',
     *     'parent' => 'index',
     *     'display'=> false,
     *     'hasView'=> false,
     *     'order'  =>125,
     *     'icon'   => '',
     *     'remark' => '说明书查看',
     *     'param'  => ''
     * )
     */
    public function file_instructions_get(){
        $this->success('ok');
    }
    /**
     * 其他文档查看
     * @adminMenu(
     *     'name'   => '其他文档查看',
     *     'parent' => 'index',
     *     'display'=> false,
     *     'hasView'=> false,
     *     'order'  =>126,
     *     'icon'   => '',
     *     'remark' => '其他文档查看',
     *     'param'  => ''
     * )
     */
    public function file_other_get(){
        $this->success('ok');
    }
    
    /**
     * 商城图片下载
     * @adminMenu(
     *     'name'   => '商城图片下载',
     *     'parent' => 'index',
     *     'display'=> false,
     *     'hasView'=> false,
     *     'order'  =>130,
     *     'icon'   => '',
     *     'remark' => '商城图片下载',
     *     'param'  => ''
     * )
     */
    public function pic_jm_load(){
       $id=$this->request->param('id',0,'intval');
       $pid=$this->request->param('pid',0,'intval');
       $where=[
           'id'=>$id,
           'type'=>1,
       ];
       $file=db('goods_file')->where($where)->find();
       if(empty($file)){
           $this->error('数据错误，文件不存在');
       }
       $path=getcwd().'/upload/';
       if(is_file($path.$file['file'])){
           zz_download($file['file'],$file['name']);
       }else{
           $this->error('文件损坏，不存在');
       }
    }
    /**
     * 实物图片下载
     * @adminMenu(
     *     'name'   => '实物图片下载',
     *     'parent' => 'index',
     *     'display'=> false,
     *     'hasView'=> false,
     *     'order'  =>130,
     *     'icon'   => '',
     *     'remark' => '实物图片下载',
     *     'param'  => ''
     * )
     */
    public function pic_pro_load(){
        $this->success('ok');
    }
    /**
     * logo图片下载
     * @adminMenu(
     *     'name'   => 'logo图片下载',
     *     'parent' => 'index',
     *     'display'=> false,
     *     'hasView'=> false,
     *     'order'  =>131,
     *     'icon'   => '',
     *     'remark' => 'logo图片下载',
     *     'param'  => ''
     * )
     */
    public function pic_logo_load(){
        $this->success('ok');
    }
    /**
     * 规格图片下载
     * @adminMenu(
     *     'name'   => '规格图片下载',
     *     'parent' => 'index',
     *     'display'=> false,
     *     'hasView'=> false,
     *     'order'  =>133,
     *     'icon'   => '',
     *     'remark' => '规格图片下载',
     *     'param'  => ''
     * )
     */
    public function pic_param_load(){
        $this->success('ok');
    }
    /**
     * 原理图片下载
     * @adminMenu(
     *     'name'   => '原理图片下载',
     *     'parent' => 'index',
     *     'display'=> false,
     *     'hasView'=> false,
     *     'order'  =>133,
     *     'icon'   => '',
     *     'remark' => '原理图片下载',
     *     'param'  => ''
     * )
     */
    public function pic_principle_load(){
        $this->success('ok');
    }
    /**
     * 其他图片下载
     * @adminMenu(
     *     'name'   => '其他图片下载',
     *     'parent' => 'index',
     *     'display'=> false,
     *     'hasView'=> false,
     *     'order'  =>134,
     *     'icon'   => '',
     *     'remark' => '其他图片下载',
     *     'param'  => ''
     * )
     */
    public function pic_other_load(){
        $this->success('ok');
    }
    /**
     * 说明书下载
     * @adminMenu(
     *     'name'   => '说明书下载',
     *     'parent' => 'index',
     *     'display'=> false,
     *     'hasView'=> false,
     *     'order'  =>135,
     *     'icon'   => '',
     *     'remark' => '说明书下载',
     *     'param'  => ''
     * )
     */
    public function file_instructions_load(){
        $this->success('ok');
    }
    /**
     * 其他文档下载
     * @adminMenu(
     *     'name'   => '其他文档下载',
     *     'parent' => 'index',
     *     'display'=> false,
     *     'hasView'=> false,
     *     'order'  =>136,
     *     'icon'   => '',
     *     'remark' => '其他文档下载',
     *     'param'  => ''
     * )
     */
    public function file_other_load(){
        $this->success('ok');
    }
    /**
     * 关联产品设置
     * @adminMenu(
     *     'name'   => '关联产品设置',
     *     'parent' => 'index',
     *     'display'=> false,
     *     'hasView'=> false,
     *     'order'  =>70,
     *     'icon'   => '',
     *     'remark' => '关联产品设置',
     *     'param'  => ''
     * )
     */
    public function link_set(){
        $this->success('ok');
    }
}
